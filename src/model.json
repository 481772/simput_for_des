{
   "order": [
      "backend",
      "constants",
      "solver",
      "solver-interfaces",
      "solver-elements",
      "solution-bcs",
      "solution-ff",
      "solution"
   ],
   "views" : {
      "backend"     : { "attributes": [ "Backend-settings", "BackendOr"]},
      "constants"   : { "attributes": [ "Constants" ] },
      "solver"      : { "attributes": [ "Solver-settings", "TimeIntegrator", "ArtificialViscosity", "Solver-source-terms", "Interfaces"] },
      "solver-interfaces": { "attributes": [ "InterfacesOr" ]},
      "solver-elements":   { "attributes": [ "ElementsOr" ], "size": -1},
      "solution-bcs":      { "attributes": [ "bcsOr" ], "size": -1},
      "solution-ff":       { "attributes": [ "PluginFluidforceName" ], "size": -1},
      "solution":          { "attributes": [ "SolutionOr" ], "size": -1}
   },
   "external": {
      "boundary-names": {
         "A (autogenerated)": "a",
         "B (autogenerated)": "b",
         "C (autogenerated)": "c",
         "D (autogenerated)": "d",
         "E (autogenerated)": "e",
         "F (autogenerated)": "f",
         "G (autogenerated)": "g",
         "H (autogenerated)": "h"
      }
   },
   "definitions": {
      "Backend-settings": {
         "parameters": [
            {
               "id"     : "backend.precision",
               "type"   : "string",
               "ui"     : "enum",
               "size"   : 1,
               "domain"   : {
                  "single": "single",
                  "double": "double"
               }
            },{
               "id"     : "backend.rank_allocator",
               "type"   : "string",
               "ui"     : "enum",
               "size"   : 1,
               "domain"   : {
                  "linear": "linear"
               }
            }
         ]
      },
      "BackendOr" : {
         "parameters": [
            {
               "id": "or",
               "type": "integer",
               "size": 1,
               "ui": "enum",
               "domain": {
                  "Open-MP": 0,
                  "Open-CL": 1,
                  "CUDA": 2
               }
            },
            ["Open-MP", "Open-CL", "CUDA"]
         ],
         "children": {
            "Open-MP": "BackendOr.or[0] === 0",
            "Open-CL": "BackendOr.or[0] === 1",
            "CUDA": "BackendOr.or[0] === 2"
         }
      },
      "CUDA": {
         "parameters": [
            {
               "id"     : "cuda.device_id",
               "type"   : "string",
               "default": [""],
               "size"   : 1
            }
         ]
      },
      "Open-MP": {
         "parameters": [
            {
               "id"     : "open-mp.cc",
               "type"   : "string",
               "size"   : 1
            },{
               "id"     : "open-mp.cflags",
               "type"   : "string",
               "size"   : 1
            },{
               "id"     : "open-mp.cblas",
               "type"   : "string",
               "size"   : 1
            },{
               "id"     : "open-mp.cblas_type",
               "type"   : "string",
               "ui"     : "enum",
               "size"   : 1,
               "default": [0],
               "domain"   : {
                  "serial": "serial",
                  "parallel": "parallel"
               }
            }
         ]
      },
      "Open-CL": {
         "parameters": [
            {
               "id"     : "open-cl.platform_id",
               "type"   : "integer",
               "size"   : 1
            },{
               "id"     : "open-cl.device_type",
               "type"   : "string",
               "ui"     : "enum",
               "size"   : 1,
               "default": [0],
               "domain"   : {
                  "all": "all",
                  "cpu": "cpu",
                  "gpu": "gpu",
                  "accelerator": "accelerator"
               }
            },{
               "id"     : "open-cl.device_id",
               "type"   : "string",
               "size"   : 1
            }
         ]
      },
      "Constants": {
         "parameters": [
            {
               "id"     : "constants.gamma",
               "type"   : "double",
               "size"   : 1
            },{
               "id"     : "constants.mu",
               "type"   : "double",
               "size"   : 1
            },{
               "id"     : "constants.pr",
               "type"   : "double",
               "size"   : 1
            },{
               "id"     : "constants.cpTref",
               "type"   : "double",
               "size"   : 1
            },{
               "id"     : "constants.cpTs",
               "type"   : "double",
               "size"   : 1
            }
         ]
      },
      "Solver-settings": {
         "parameters": [
            {
               "id": "solver.system",
               "type"   : "string",
               "ui"     : "enum",
               "size"   : 1,
               "default": [0],
               "domain" : {
                  "euler": "euler",
                  "navier-stokes": "navier-stokes"
               }
            },{
               "id": "solver.order",
               "type": "integer",
               "size": 1
            },{
               "id": "solver.anti_alias",
               "type": "string",
               "ui": "enum",
               "size"   : 1,
               "domain"   : {
                  "flux": "flux",
                  "surf-flux": "surf-flux",
                  "div-flux": "div-flux",
                  "flux, surf-flux": "flux, surf-flux",
                  "flix, div-flux": "flix, div-flux",
                  "surf-flux, div-flux": "surf-flux, div-flux",
                  "flux, surf-flux, div-flux": "flux, surf-flux, div-flux"
               }
            },{
               "id": "solver.viscosity_correction",
               "type"   : "string",
               "ui"     : "enum",
               "size"   : 1,
               "default": [0],
               "domain" : {
                  "none": "none",
                  "sutherland": "sutherland"
               }
            },{
               "id": "solver.shock_capturing",
               "type"   : "string",
               "ui"     : "enum",
               "size"   : 1,
               "default": [0],
               "domain" : {
                  "none": "none",
                  "aritificial-viscosity": "aritificial-viscosity"
               }
            }
         ]
      },
      "TimeIntegrator": {
         "parameters": [
            {
               "id"     : "solver.scheme",
               "type"   : "string",
               "ui"     :"enum",
               "size"   : 1,
               "domain"   : {
                  "euler": "euler",
                  "rk34": "rk34",
                  "rk4": "rk4",
                  "rk45": "rk45",
                  "tvd-rk3": "tvd-rk3"
               }
            },{
               "id"     : "solver.tstart",
               "type"   : "double",
               "size"   : 1
            },{
               "id"     : "solver.tend",
               "type"   : "double",
               "size"   : 1
            },{
               "id"     : "solver.dt",
               "type"   : "double",
               "size"   : 1
            },{
               "id"     : "solver.controller",
               "type"   : "string",
               "ui"     : "enum",
               "size"   : 1,
               "default": [0],
               "domain"   : {
                  "none": "none",
                  "pi": "pi"
               }
            },{
                "id": "solver.atol",
                "type": "double",
                "size": 1
            },{
                "id": "solver.rtol",
                "type": "double",
                "size": 1
            },{
                "id": "solver.safety_fact",
                "type": "double",
                "size": 1
            },{
                "id": "solver.min_fact",
                "type": "double",
                "size": 1
            },{
                "id": "solver.max_fact",
                "type": "double",
                "size": 1
            }
         ]
      },
      "ArtificialViscosity": {
         "parameters": [
            {
               "id": "solver.max_amu",
               "type": "double",
               "size": 1
            },{
               "id": "solver.s0",
               "type": "double",
               "size": 1
            },{
               "id": "solver.kappa",
               "type": "double",
               "size": 1
            }
         ]
      },
      "Interfaces": {
         "parameters": [
            {
               "id": "solver.riemann",
               "type": "string",
               "ui"  : "enum",
               "size": 1,
               "domain": {
                  "rusanov": "rusanov",
                  "hll": "hll",
                  "hllc": "hllc",
                  "roe": "roe",
                  "roem": "roem"
               }
            },{
               "id": "solver.ldg_beta",
               "type": "double",
               "size": 1
            },{
               "id": "solver.ldg_tau",
               "type": "double",
               "size": 1
            }
         ]
      },

      "InterfacesOr": {
         "parameters": [
            {
               "id": "or",
               "type": "integer",
               "size": 1,
               "ui": "enum",
               "default": [0],
               "domain": {
                  "Linear": 0,
                  "Triangular": 1,
                  "Quadrilateral": 2
               }
            },
            ["Linear-int", "Triangular-int", "Quadrilateral-int"]
         ],
         "children": {
            "Linear-int": "InterfacesOr.or[0] === 0",
            "Triangular-int": "InterfacesOr.or[0] === 1",
            "Quadrilateral-int": "InterfacesOr.or[0] === 2"
         }
      },
      "Linear-int": {
         "parameters": [
            {
               "id": "solver.interfaces.flux_pts",
               "type": "string",
               "ui"  : "enum",
               "size": 1,
               "domain": {
                  "gauss-legendre": "gauss-legendre",
                  "gauss-legendre-lobatto": "gauss-legendre-lobatto"
               }
            },{
               "id": "solver.interfaces.quad_deg",
               "type": "integer",
               "size": 1
            },{
               "id": "solver.interfaces.quad_pts",
               "type": "string",
               "ui"  : "enum",
               "size": 1,
               "domain": {
                  "gauss-legendre": "gauss-legendre",
                  "gauss-legendre-lobatto": "gauss-legendre-lobatto"
               }
            }
         ]
      },
      "Triangular-int": {
         "parameters": [
            {
               "id": "solver.interfaces.flux_pts",
               "type": "string",
               "ui"  : "enum",
               "size": 1,
               "domain": {
                  "williams-shunn": "williams-shunn"
               }
            },{
               "id": "solver.interfaces.quad_deg",
               "type": "integer",
               "size": 1
            },{
               "id": "solver.interfaces.quad_pts",
               "type": "string",
               "ui"  : "enum",
               "size": 1,
               "domain": {
                  "williams-shunn": "williams-shunn",
                  "witherden-vincent": "witherden-vincent"
               }
            }
         ]
      },
      "Quadrilateral-int": {
         "parameters": [
            {
               "id": "solver.interfaces.flux_pts",
               "type": "string",
               "ui"  : "enum",
               "size": 1,
               "domain": {
                  "gauss-legendre": "gauss-legendre",
                  "gauss-legendre-lobatto": "gauss-legendre-lobatto"
               }
            },{
               "id": "solver.interfaces.quad_deg",
               "type": "integer",
               "size": 1
            },{
               "id": "solver.interfaces.quad_pts",
               "type": "string",
               "ui"  : "enum",
               "size": 1,
               "domain": {
                  "gauss-legendre": "gauss-legendre",
                  "gauss-legendre-lobatto": "gauss-legendre-lobatto",
                  "witherden-vincent": "witherden-vincent"
               }
            }
         ]
      },

      "ElementsOr": {
         "parameters": [
            {
               "id": "or",
               "type": "integer",
               "size": 1,
               "ui": "enum",
               "default": [0],
               "domain": {
                  "Triangular": 0,
                  "Quadrilateral": 1,
                  "Hexahedral": 2,
                  "Tetrahedral": 3,
                  "Prismatic": 4,
                  "Pyramidal": 5
               }
            },
            ["Triangular-el", "Quadrilateral-el", "Hexahedral-el", "Tetrahedral-el", "Prismatic-el", "Pyramidal-el"]
         ],
         "children": {
            "Triangular-el":    "ElementsOr.or[0] === 0",
            "Quadrilateral-el": "ElementsOr.or[0] === 1",
            "Hexahedral-el":    "ElementsOr.or[0] === 2",
            "Tetrahedral-el":   "ElementsOr.or[0] === 3",
            "Prismatic-el":     "ElementsOr.or[0] === 4",
            "Pyramidal-el":     "ElementsOr.or[0] === 5"
         }
      },

      "Triangular-el": {
         "parameters": [
            {
               "id": "solver.elements.soln_pts",
               "type": "string",
               "ui"  : "enum",
               "size": 1,
               "domain": {
                  "williams-shunn": "williams-shunn"
               }
            },{
               "id": "solver.elements.quad_deg",
               "type": "integer",
               "size": 1
            },{
               "id": "solver.elements.quad_pts",
               "type": "string",
               "ui"  : "enum",
               "size": 1,
               "domain": {
                  "williams-shunn": "williams-shunn",
                  "witherden-vincent": "witherden-vincent"
               }
            }
         ]
      },
      "Quadrilateral-el": {
         "parameters": [
            {
               "id": "solver.elements.soln_pts",
               "type": "string",
               "ui"  : "enum",
               "size": 1,
               "domain": {
                  "gauss-legendre": "gauss-legendre",
                  "gauss-legendre-lobatto": "gauss-legendre-lobatto"
               }
            },{
               "id": "solver.elements.quad_deg",
               "type": "integer",
               "size": 1
            },{
               "id": "solver.elements.quad_pts",
               "type": "string",
               "ui"  : "enum",
               "size": 1,
               "domain": {
                  "gauss-legendre": "gauss-legendre",
                  "gauss-legendre-lobatto": "gauss-legendre-lobatto",
                  "witherden-vincent": "witherden-vincent"
               }
            }
         ]
      },
      "Hexahedral-el": {
         "parameters": [
            {
               "id": "solver.elements.soln_pts",
               "type": "string",
               "ui"  : "enum",
               "size": 1,
               "domain": {
                  "gauss-legendre": "gauss-legendre",
                  "gauss-legendre-lobatto": "gauss-legendre-lobatto"
               }
            },{
               "id": "solver.elements.quad_deg",
               "type": "integer",
               "size": 1
            },{
               "id": "solver.elements.quad_pts",
               "type": "string",
               "ui"  : "enum",
               "size": 1,
               "domain": {
                  "gauss-legendre": "gauss-legendre",
                  "gauss-legendre-lobatto": "gauss-legendre-lobatto",
                  "witherden-vincent": "witherden-vincent"
               }
            }
         ]
      },
      "Tetrahedral-el": {
         "parameters": [
            {
               "id": "solver.elements.soln_pts",
               "type": "string",
               "ui"  : "enum",
               "size": 1,
               "domain": {
                  "shunn-ham": "shunn-ham"
               }
            },{
               "id": "solver.elements.quad_deg",
               "type": "integer",
               "size": 1
            },{
               "id": "solver.elements.quad_pts",
               "type": "string",
               "ui"  : "enum",
               "size": 1,
               "domain": {
                  "shunn-ham": "shunn-ham",
                  "witherden-vincent": "witherden-vincent"
               }
            }
         ]
      },
      "Prismatic-el": {
         "parameters": [
            {
               "id": "solver.elements.soln_pts",
               "type": "string",
               "ui"  : "enum",
               "size": 1,
               "domain": {
                  "williams-shunn~gauss-legendre": "williams-shunn~gauss-legendre",
                  "williams-shunn~gauss-legendre-lobatto": "williams-shunn~gauss-legendre-lobatto"
               }
            },{
               "id": "solver.elements.quad_deg",
               "type": "integer",
               "size": 1
            },{
               "id": "solver.elements.quad_pts",
               "type": "string",
               "ui"  : "enum",
               "size": 1,
               "domain": {
                  "williams-shunn~gauss-legendre": "williams-shunn~gauss-legendre",
                  "williams-shunn~gauss-legendre-lobatto": "williams-shunn~gauss-legendre-lobatto",
                  "witherden-vincent": "witherden-vincent"
               }
            }
         ]
      },
      "Pyramidal-el": {
         "parameters": [
            {
               "id": "solver.elements.soln_pts",
               "type": "string",
               "ui"  : "enum",
               "size": 1,
               "domain": {
                  "gauss-legendre":"gauss-legendre",
                  "gauss-legendre-lobatto":"gauss-legendre-lobatto"
               }
            },{
               "id": "solver.elements.quad_deg",
               "type": "integer",
               "size": 1
            },{
               "id": "solver.elements.quad_pts",
               "type": "string",
               "ui"  : "enum",
               "size": 1,
               "domain": {
                  "witherden-vincent": "witherden-vincent"
               }
            }
         ]
      },
      "Solver-source-terms": {
         "parameters": [
            {
               "id": "solver.source-terms.rho",
               "type": "string",
               "size": 1
            },{
               "id": "solver.source-terms.rhou",
               "type": "string",
               "size": 1
            },{
               "id": "solver.source-terms.rhov",
               "type": "string",
               "size": 1
            },{
               "id": "solver.source-terms.rhow",
               "type": "string",
               "size": 1
            },{
               "id": "solver.source-terms.E",
               "type": "string",
               "size": 1
            }
         ]
      },

      "SolutionOr": {
         "parameters": [
            {
               "id": "or",
               "type": "integer",
               "size": 1,
               "ui": "enum",
               "default": [0],
               "domain": {
                  "Filter": 0,
                  "Plugin Writer": 1,
                  "Plugin NaN check": 2,
                  "Plugin residual": 3,
                  "Plugin sampler": 4,
                  "Plugin Time average": 5,
                  "ics": 6
               }
            },
            ["Filter",
             "PluginWriter",
             "PluginNaNcheck",
             "Pluginresidual",
             "Pluginsampler",
             "PluginTimeaverage",
             "ics"
            ]
         ],
         "children": {
            "Filter":              "SolutionOr.or[0] === 0",
            "PluginWriter":       "SolutionOr.or[0] === 1",
            "PluginNaNcheck":    "SolutionOr.or[0] === 2",
            "Pluginresidual":     "SolutionOr.or[0] === 3",
            "Pluginsampler":      "SolutionOr.or[0] === 4",
            "PluginTimeaverage": "SolutionOr.or[0] === 5",
            "ics":                 "SolutionOr.or[0] === 6"
         }
      },
      "Filter": {
         "parameters":[
            {
               "id": "solution.filter.nsteps",
               "type": "integer",
               "size": 1
            },{
               "id": "solution.filter.alpha",
               "type": "double",
               "size": 1
            },{
               "id": "solution.filter.order",
               "type": "integer",
               "size": 1
            },{
               "id": "solution.filter.cutoff",
               "type": "integer",
               "size": 1
            }
         ]
      },
      "PluginWriter": {
         "parameters":[
            {
               "id": "solution.plugin_writer.dt_out",
               "type": "double",
               "size": 1
            },{
               "id": "solution.plugin_writer.basedir",
               "type": "double",
               "size": 1
            },{
               "id": "solution.plugin_writer.basename",
               "type": "string",
               "size": 1
            }
         ]
      },
      "PluginFluidforceName": {
         "parameters":[
            {
               "id": "solution.plugin_fluidforce.name",
               "type": "string",
               "ui"  : "enum",
               "size": 1,
               "domain": {
                  "external": "boundary-names"
               }
            }, {
               "id": "solution.plugin_fluidforce.nsteps",
               "type": "integer",
               "size": 1
            },{
               "id": "solution.plugin_fluidforce.file",
               "type": "string",
               "size": 1
            },{
               "id": "solution.plugin_fluidforce.header",
               "type": "integer",
               "size": 1
            }
         ]
      },
      "PluginNaNcheck": {
         "parameters":[
            {
               "id": "solution.plugin_nancheck.nsteps",
               "type": "integer",
               "size": 1
            }
         ]
      },
      "Pluginresidual": {
         "parameters": [
            {
               "id": "solution.plugin_residual.nsteps",
               "type": "integer",
               "size": 1
            },{
               "id": "solution.plugin_residual.file",
               "type": "string",
               "size": 1
            },{
               "id": "solution.plugin_residual.header",
               "type": "integer",
               "size": 1
            }
         ]
      },
      "Pluginsampler": {
         "parameters":[
            {
               "id": "solution.plugin_sampler.nsteps",
               "type": "integer",
               "size": 1
            }, {
               "id": "solution.plugin_sampler.samp_pts",
               "type": "string",
               "size": 1
            }, {
               "id": "solution.plugin_sampler.format",
               "type": "string",
               "ui"  : "enum",
               "size": 1,
               "domain": {
                  "primitive": "primitive",
                  "conservative": "conservative"
               }
            }, {
               "id": "solution.plugin_sampler.file",
               "type": "string",
               "size": 1
            }, {
               "id": "solution.plugin_sampler.header",
               "type": "integer",
               "size": 1
            }
         ]
      },
      "PluginTimeaverage": {
         "parameters":[
            {
               "id": "solution.plugin_tavg.nsteps",
               "type": "integer",
               "size": 1
            },{
               "id": "solution.plugin_tavg.dt_out",
               "type": "double",
               "size": 1
            },{
               "id": "solution.plugin_tavg.basedir",
               "type": "string",
               "size": 1
            },{
               "id": "solution.plugin_tavg.basename",
               "type": "string",
               "size": 1
            },{
               "id": "solution.plugin_tavg.avg_name",
               "type": "string",
               "size": 1
            }
         ]
      },
      "bcsOr": {
         "parameters": [
            {
               "id": "or",
               "type": "integer",
               "size": 1,
               "ui": "enum",
               "default": [0],
               "domain": {
                  "char-riem-inv": 0,
                  "no-slp-adia-wall": 1,
                  "no-slp-isot-wall": 2,
                  "slp-adia-wall": 3,
                  "sub-in-frv": 4,
                  "sub-in-ftpttang": 5,
                  "sub-out-fp": 6,
                  "sup-in-fa": 7,
                  "sup-out-fn": 8
               }
            },
            ["char-riem-inv",
             "no-slp-adia-wall",
             "no-slp-isot-wall",
             "slp-adia-wall",
             "sub-in-frv",
             "sub-in-ftpttang",
             "sub-out-fp",
             "sup-in-fa",
             "sup-out-fn"]
         ],
         "children": {
            "char-riem-inv":    "bcsOr.or[0] === 0",
            "no-slp-adia-wall": "bcsOr.or[0] === 1",
            "no-slp-isot-wall": "bcsOr.or[0] === 2",
            "slp-adia-wall":    "bcsOr.or[0] === 3",
            "sub-in-frv":       "bcsOr.or[0] === 4",
            "sub-in-ftpttang":  "bcsOr.or[0] === 5",
            "sub-out-fp":       "bcsOr.or[0] === 6",
            "sup-in-fa":        "bcsOr.or[0] === 7",
            "sup-out-fn":       "bcsOr.or[0] === 8"
         }
      },

      "char-riem-inv": {
         "parameters": [
            {
               "id":"name",
               "type": "string",
               "ui"  : "enum",
               "size": 1,
               "default": [""],
               "domain": {
                  "external": "boundary-names"
               }
            },{
               "id": "rho",
               "type": "string",
               "size": 1
            }, {
               "id": "u",
               "type": "string",
               "size": 1
            }, {
               "id": "v",
               "type": "string",
               "size": 1
            }, {
               "id": "w",
               "type": "string",
               "size": 1
            }, {
               "id": "p",
               "type": "string",
               "size": 1
            }
         ]
      },
      "no-slp-adia-wall": {
         "parameters": []
      },
      "no-slp-isot-wall": {
         "parameters": [
            {
               "id":"name",
               "type": "string",
               "ui"  : "enum",
               "size": 1 ,
               "default": [""],
               "domain": {
                  "external": "boundary-names"
               }
            },{
               "id": "u",
               "type": "double",
               "size": 1
            },{
               "id": "v",
               "type": "double",
               "size": 1
            },{
               "id": "w",
               "type": "double",
               "size": 1
            },{
               "id": "cpTw",
               "type": "double",
               "size": 1
            }
         ]
      },
      "slp-adia-wall": {
         "parameters": []
      },
      "sub-in-frv": {
         "parameters": [
            {
               "id":"name",
               "type": "string",
               "ui"  : "enum",
               "size": 1,
               "default": [""],
               "domain": {
                  "external": "boundary-names"
               }
            },{
               "id": "rho",
               "type": "double",
               "size": 1
            }, {
               "id": "u",
               "type": "double",
               "size": 1
            }, {
               "id": "v",
               "type": "double",
               "size": 1
            }, {
               "id": "w",
               "type": "double",
               "size": 1
            }
         ]
      },
      "sub-in-ftpttang": {
         "parameters": [
            {
               "id":"name",
               "type": "string",
               "ui"  : "enum",
               "size": 1,
               "default": [""],
               "domain": {
                  "external": "boundary-names"
               }
            },{
               "id": "pt",
               "type": "double",
               "size": 1
            },{
               "id": "cpTt",
               "type": "double",
               "size": 1
            },{
               "id": "theta",
               "type": "double",
               "size": 1
            },{
               "id": "phi",
               "type": "double",
               "size": 1
            }
         ]
      },
      "sub-out-fp": {
         "parameters": [
            {
               "id":"name",
               "type": "string",
               "ui"  : "enum",
               "size": 1,
               "default": [""],
               "domain": {
                  "external": "boundary-names"
               }
            },{
               "id": "p",
               "type": "double",
               "size": 1
            }
         ]
      },
      "sup-in-fa": {
         "parameters": [
            {
               "id":"name",
               "type": "string",
               "ui"  : "enum",
               "size": 1 ,
               "default": [""],
               "domain": {
                  "external": "boundary-names"
               }
            },{
               "id": "rho",
               "type": "double",
               "size": 1
            }, {
               "id": "u",
               "type": "double",
               "size": 1
            }, {
               "id": "v",
               "type": "double",
               "size": 1
            }, {
               "id": "w",
               "type": "double",
               "size": 1
            }, {
               "id": "p",
               "type": "double",
               "size": 1
            }
         ]
      },
      "sup-out-fn": {
         "parameters": []
      },
      "ics": {
         "parameters":[
            {
               "id": "ics.rho",
               "type": "string",
               "size": 1
            }, {
               "id": "ics.u",
               "type": "string",
               "size": 1
            }, {
               "id": "ics.v",
               "type": "string",
               "size": 1
            }, {
               "id": "ics.w",
               "type": "string",
               "size": 1
            }, {
               "id": "ics.p",
               "type": "string",
               "size": 1
            }
         ]
      }
   }
}
