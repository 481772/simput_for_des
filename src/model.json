{
   "order": [
      "backend",
      "constants",
      "solver",
      "solver-interfaces",
      "solver-elements",
      "solution-bcs",
      "solution"
   ],
   "views" : {
      "backend"     : { "id": "backend",  "label" : "Backend",   "attributes": [ "Backend-settings", ["Open-MP", "Open-CL", "CUDA"]], "names": ["Backend"]},
      "constants"   : { "id": "constants","label" : "Constants", "attributes": [ "Constants" ] },
      "solver"      : { "id": "solver",   "label" : "Solver",    "attributes": [ "Solver-settings", "Time Integrator", "Artificial Viscosity", "Solver-source-terms", "Interfaces"] },
      "solver-interfaces": { "id": "solver-interfaces","label": "Solver Interfaces", "attributes": [["Linear-int", "Triangular-int", "Quadrilateral-int"]]},
      "solver-elements":   { "id": "solver-elements",  "label": "Solver Elements",   "attributes": [["Triangular-el", "Quadrilateral-el", "Hexahedral-el", "Tetrahedral-el", "Prismatic-el", "Pyramidal-el"]]},
      "solution-bcs":      { "id": "solution-bcs", "label": "Boundary Conditions",   "attributes": [["char-riem-inv", "no-slp-adia-wall", "no-slp-isot-wall", "slp-adia-wall", "sub-in-frv", "sub-in-ftpttang", "sub-out-fp", "sup-in-fa", "sup-out-fn"]], "size": -1},
      "solution":          { "id": "solution",         "label": "Solution",          "attributes": [["Filter", "Plugin Writer", "Plugin Fluidforce Name", "Plugin NaN check", "Plugin residual", "Plugin sampler", "Plugin Time average", "ics"]], "size": -1}
   },
   "definitions": {
      "Backend-settings": {
         "label": "Settings", 
         "parameters": [
            {
               "id"     : "backend.precision",
               "label"  : "Precision",
               "type"   : "enum",
               "size"   : 1,
               "enum"   : {
                  "labels": ["single", "double"],
                  "values": ["single", "double"]
               }
            },{
               "id"     : "backend.rank_allocator",
               "label"  : "Rank Allocator",
               "type"   : "enum",
               "size"   : 1,
               "enum"   : {
                  "labels": ["linear"],
                  "values": ["linear"]
               }
            }
         ]
      },
      "CUDA": {
         "label": "CUDA", 
         "parameters": [
            {
               "id"     : "cuda.device_id",
               "label"  : "Precision",
               "type"   : "string",
               "size"   : 1
            }
         ]
      },
      "Open-MP": {
         "label": "Open-MP", 
         "parameters": [
            {
               "id"     : "open-mp.cc",
               "label"  : "C Compiler",
               "type"   : "string",
               "size"   : 1
            },{
               "id"     : "open-mp.cflags",
               "label"  : "Compiler Flags",
               "type"   : "string",
               "size"   : 1
            },{
               "id"     : "open-mp.cblas",
               "label"  : "Path to shared C BLAS library",
               "type"   : "string",
               "size"   : 1
            },{
               "id"     : "open-mp.cblas_type",
               "label"  : "Type of BLAS library",
               "type"   : "enum",
               "size"   : 1,
               "enum"   : {
                  "labels": ["serial", "parallel"],
                  "values": ["serial", "parallel"]
               }
            }
         ]
      },
      "Open-CL": {
         "label": "Open-CL", 
         "parameters": [
            {
               "id"     : "open-cl.platform_id",
               "label"  : "Platform ID",
               "type"   : "integer",
               "size"   : 1
            },{
               "id"     : "open-cl.device_type",
               "label"  : "Device Type",
               "type"   : "enum",
               "size"   : 1,
               "enum"   : {
                  "labels": ["all", "cpu", "gpu", "accelerator"],
                  "values": ["all", "cpu", "gpu", "accelerator"]
               }
            },{
               "id"     : "open-cl.device_id",
               "label"  : "Device ID",
               "type"   : "string",
               "size"   : 1
            }
         ]
      },
      "Constants": {
         "label": "Constants", 
         "parameters": [
            {
               "id"     : "constants.gamma",
               "label"  : "Gamma",
               "type"   : "double",
               "size"   : 1
            },{
               "id"     : "constants.mu",
               "label"  : "Mu",
               "type"   : "double",
               "size"   : 1
            },{
               "id"     : "constants.pr",
               "label"  : "Pr",
               "type"   : "double",
               "size"   : 1
            },{
               "id"     : "constants.cpTref",
               "label"  : "cpTref",
               "type"   : "double",
               "size"   : 1
            },{
               "id"     : "constants.cpTs",
               "label"  : "cpTS",
               "type"   : "double",
               "size"   : 1
            }
         ]
      },
      "Solver-settings": {
         "label": "Settings",
         "parameters": [
            {
               "id": "solver.system", 
               "label": "System",
               "type": "enum",
               "size"   : 1,
               "enum"   : {
                  "labels": ["euler", "navier-stokes"],
                  "values": ["euler", "navier-stokes"]
               }
            },{
               "id": "solver.order",
               "label": "Order",
               "type": "integer",
               "size": 1
            },{
               "id": "solver.anti_alias", 
               "label": "Anti-alias",
               "type": "enum",
               "size"   : 1,
               "enum"   : {
                  "labels": ["flux", "surf-flux", "div-flux", "flux, surf-flux", "flix, div-flux", "surf-flux, div-flux", "flux, surf-flux, div-flux"],
                  "values": ["flux", "surf-flux", "div-flux", "flux, surf-flux", "flix, div-flux", "surf-flux, div-flux", "flux, surf-flux, div-flux"]
               }
            },{
               "id": "solver.viscosity_correction", 
               "label": "Viscosity correction",
               "type": "enum",
               "size"   : 1,
               "enum"   : {
                  "labels": ["none", "sutherland"],
                  "values": ["none", "sutherland"]
               }
            },{
               "id": "solver.shock_capturing", 
               "label": "Shock capturing",
               "type": "enum",
               "size"   : 1,
               "enum"   : {
                  "labels": ["none", "aritificial-viscosity"],
                  "values": ["none", "aritificial-viscosity"]
               }
            }
         ]   
      },
      "Time Integrator": {
         "label": "Time Integrator",
         "parameters": [
            {
               "id"     : "solver.scheme",
               "label"  : "Scheme",
               "type"   : "enum",
               "size"   : 1,
               "enum"   : {
                  "labels": ["euler", "rk34", "rk4", "rk45", "tvd-rk3"],
                  "values": ["euler", "rk34", "rk4", "rk45", "tvd-rk3"]
               }
            },{
               "id"     : "solver.tstart",
               "label"  : "Initial time",
               "type"   : "double",
               "size"   : 1
            },{
               "id"     : "solver.tend",
               "label"  : "Final time",
               "type"   : "double",
               "size"   : 1
            },{
               "id"     : "solver.dt",
               "label"  : "Time step",
               "type"   : "double",
               "size"   : 1
            },{
               "id"     : "solver.controller",
               "label"  : "Time step",
               "type"   : "enum",
               "size"   : 1,
               "enum"   : {
                  "labels": ["none", "pi"],
                  "values": ["none", "pi"]
               }
            },{
                "id": "solver.atol",
                "label": "atol",
                "type": "double",
                "size": 1
            },{
                "id": "solver.rtol",
                "label": "rtol",
                "type": "double",
                "size": 1
            },{
                "id": "solver.safety_fact",
                "label": "safety-fact",
                "type": "double",
                "size": 1
            },{
                "id": "solver.min_fact",
                "label": "min-fact",
                "type": "double",
                "size": 1
            },{
                "id": "solver.max_fact",
                "label": "max-fact",
                "type": "double",
                "size": 1
            }
         ]
      },
      "Artificial Viscosity": {
         "label": "Artificial Viscosity",
         "parameters": [
            {
               "id": "solver.max_amu",
               "label": "Maximum artificial viscosity",
               "type": "double",
               "size": 1
            },{
               "id": "solver.s0",
               "label": "Sensor cut-off",
               "type": "double",
               "size": 1
            },{
               "id": "solver.kappa",
               "label": "Sensor range",
               "type": "double",
               "size": 1
            }
         ]   
      },
      "Interfaces": {
         "label": "Interfaces", 
         "parameters": [
            {
               "id": "solver.riemann",
               "label": "Riemann Solver",
               "type": "enum",
               "size": 1,
               "enum"   : {
                  "labels": ["rusanov", "hll", "hllc", "roe", "roem"],
                  "values": ["rusanov", "hll", "hllc", "roe", "roem"]
               }
            },{
               "id": "solver.ldg_beta",
               "label": "LDG Beta",
               "type": "double",
               "size": 1
            },{
               "id": "solver.ldg_tau",
               "label": "LDG Tau",
               "type": "double",
               "size": 1
            }
         ]   
      },
      "Linear-int": {
         "label": "Linear",
         "parameters": [
            {
               "id": "solver.interfaces.flux_pts",
               "label": "Flux points",
               "type": "enum",
               "size": 1,
               "enum": {
                  "labels": ["gauss-legendre", "gauss-legendre-lobatto"],
                  "values": ["gauss-legendre", "gauss-legendre-lobatto"]
               }
            },{
               "id": "solver.interfaces.quad_deg",
               "label": "Degree of quadratur",
               "type": "integer",
               "size": 1
            },{
               "id": "solver.interfaces.quad_pts",
               "label": "Name of quadratur",
               "type": "enum",
               "size": 1,
               "enum": {
                  "labels": ["gauss-legendre", "gauss-legendre-lobatto"],
                  "values": ["gauss-legendre", "gauss-legendre-lobatto"]
               }
            }
         ]   
      }, 
      "Triangular-int": {
         "label": "Triangular",
         "parameters": [
            {
               "id": "solver.interfaces.flux_pts",
               "label": "Flux points",
               "type": "enum",
               "size": 1,
               "enum": {
                  "labels": ["williams-shunn"],
                  "values": ["williams-shunn"]
               }
            },{
               "id": "solver.interfaces.quad_deg",
               "label": "Degree of quadratur",
               "type": "integer",
               "size": 1
            },{
               "id": "solver.interfaces.quad_pts",
               "label": "Name of quadratur",
               "type": "enum",
               "size": 1,
               "enum": {
                  "labels": ["williams-shunn", "witherden-vincent"],
                  "values": ["williams-shunn", "witherden-vincent"]
               }
            }
         ]   
      }, 
      "Quadrilateral-int": {
         "label": "Quadrilateral",
         "parameters": [
            {
               "id": "solver.interfaces.flux_pts",
               "label": "Flux points",
               "type": "enum",
               "size": 1,
               "enum": {
                  "labels": ["gauss-legendre", "gauss-legendre-lobatto"],
                  "values": ["gauss-legendre", "gauss-legendre-lobatto"]
               }
            },{
               "id": "solver.interfaces.quad_deg",
               "label": "Degree of quadratur",
               "type": "integer",
               "size": 1
            },{
               "id": "solver.interfaces.quad_pts",
               "label": "Name of quadratur",
               "type": "enum",
               "size": 1,
               "enum": {
                  "labels": ["gauss-legendre", "gauss-legendre-lobatto", "witherden-vincent"],
                  "values": ["gauss-legendre", "gauss-legendre-lobatto", "witherden-vincent"]
               }
            }
         ]   
      },
      
      "Triangular-el": {
         "label": "Triangular",
         "parameters": [
            {
               "id": "solver.elements.soln_pts",
               "label": "Solution points",
               "type": "enum",
               "size": 1,
               "enum": {
                  "labels": ["williams-shunn"],
                  "values": ["williams-shunn"]
               }
            },{
               "id": "solver.elements.quad_deg",
               "label": "Degree of quadratur",
               "type": "integer",
               "size": 1
            },{
               "id": "solver.elements.quad_pts",
               "label": "Name of quadratur",
               "type": "enum",
               "size": 1,
               "enum": {
                  "labels": ["williams-shunn", "witherden-vincent"],
                  "values": ["williams-shunn", "witherden-vincent"]
               }
            }
         ]   
      }, 
      "Quadrilateral-el": {
         "label": "Quadrilateral",
         "parameters": [
            {
               "id": "solver.elements.soln_pts",
               "label": "Solution points",
               "type": "enum",
               "size": 1,
               "enum": {
                  "labels": ["gauss-legendre", "gauss-legendre-lobatto"],
                  "values": ["gauss-legendre", "gauss-legendre-lobatto"]
               }
            },{
               "id": "solver.elements.quad_deg",
               "label": "Degree of quadratur",
               "type": "integer",
               "size": 1
            },{
               "id": "solver.elements.quad_pts",
               "label": "Name of quadratur",
               "type": "enum",
               "size": 1,
               "enum": {
                  "labels": ["gauss-legendre", "gauss-legendre-lobatto", "witherden-vincent"],
                  "values": ["gauss-legendre", "gauss-legendre-lobatto", "witherden-vincent"]
               }
            }
         ]   
      }, 
      "Hexahedral-el": {
         "label": "Hexahedral",
         "parameters": [
            {
               "id": "solver.elements.soln_pts",
               "label": "Solution points",
               "type": "enum",
               "size": 1,
               "enum": {
                  "labels": ["gauss-legendre", "gauss-legendre-lobatto"],
                  "values": ["gauss-legendre", "gauss-legendre-lobatto"]
               }
            },{
               "id": "solver.elements.quad_deg",
               "label": "Degree of quadratur",
               "type": "integer",
               "size": 1
            },{
               "id": "solver.elements.quad_pts",
               "label": "Name of quadratur",
               "type": "enum",
               "size": 1,
               "enum": {
                  "labels": ["gauss-legendre", "gauss-legendre-lobatto", "witherden-vincent"],
                  "values": ["gauss-legendre", "gauss-legendre-lobatto", "witherden-vincent"]
               }
            }
         ]   
      }, 
      "Tetrahedral-el": {
         "label": "Tetrahedral",
         "parameters": [
            {
               "id": "solver.elements.soln_pts",
               "label": "Solution points",
               "type": "enum",
               "size": 1,
               "enum": {
                  "labels": ["shunn-ham"],
                  "values": ["shunn-ham"]
               }
            },{
               "id": "solver.elements.quad_deg",
               "label": "Degree of quadratur",
               "type": "integer",
               "size": 1
            },{
               "id": "solver.elements.quad_pts",
               "label": "Name of quadratur",
               "type": "enum",
               "size": 1,
               "enum": {
                  "labels": ["shunn-ham", "witherden-vincent"],
                  "values": ["shunn-ham", "witherden-vincent"]
               }
            }
         ]   
      }, 
      "Prismatic-el": {
         "label": "Prismatic",
         "parameters": [
            {
               "id": "solver.elements.soln_pts",
               "label": "Solution points",
               "type": "enum",
               "size": 1,
               "enum": {
                  "labels": ["williams-shunn~gauss-legendre", "williams-shunn~gauss-legendre-lobatto"],
                  "values": ["williams-shunn~gauss-legendre", "williams-shunn~gauss-legendre-lobatto"]
               }
            },{
               "id": "solver.elements.quad_deg",
               "label": "Degree of quadratur",
               "type": "integer",
               "size": 1
            },{
               "id": "solver.elements.quad_pts",
               "label": "Name of quadratur",
               "type": "enum",
               "size": 1,
               "enum": {
                  "labels": ["williams-shunn~gauss-legendre", "williams-shunn~gauss-legendre-lobatto", "witherden-vincent"],
                  "values": ["williams-shunn~gauss-legendre", "williams-shunn~gauss-legendre-lobatto", "witherden-vincent"]
               }
            }
         ]   
      }, 
      "Pyramidal-el": {
         "label": "Pyramidal",
         "parameters": [
            {
               "id": "solver.elements.soln_pts",
               "label": "Solution points",
               "type": "enum",
               "size": 1,
               "enum": {
                  "labels": ["gauss-legendre", "gauss-legendre-lobatto"],
                  "values": ["gauss-legendre", "gauss-legendre-lobatto"]
               }
            },{
               "id": "solver.elements.quad_deg",
               "label": "Degree of quadratur",
               "type": "integer",
               "size": 1
            },{
               "id": "solver.elements.quad_pts",
               "label": "Name of quadratur",
               "type": "enum",
               "size": 1,
               "enum": {
                  "labels": ["witherden-vincent"],
                  "values": ["witherden-vincent"]
               }
            }
         ]   
      },
      "Solver-source-terms": {
         "label": "Solver Source Terms",
         "parameters": [
            {
               "id": "solver.source-terms.rho",
               "label": "Density source term",
               "type": "string",
               "size": 1
            },{
               "id": "solver.source-terms.rhou",
               "label": "X-momentum source term",
               "type": "string",
               "size": 1
            },{
               "id": "solver.source-terms.rhov",
               "label": "Y-momentum source term",
               "type": "string",
               "size": 1
            },{
               "id": "solver.source-terms.rhow",
               "label": "Z-momentum source term",
               "type": "string",
               "size": 1
            },{
               "id": "solver.source-terms.E",
               "label": "Energy source term",
               "type": "string",
               "size": 1
            }
         ]   
      },
      "Filter": {
         "label": "Filter",
         "parameters":[
            {
               "id": "solution.filter.nsteps",
               "label": "Filter apply interval (in steps)",
               "type": "integer",
               "size": 1
            },{
               "id": "solution.filter.alpha",
               "label": "Strength of filter",
               "type": "double",
               "size": 1
            },{
               "id": "solution.filter.order",
               "label": "Order of filter",
               "type": "integer",
               "size": 1
            },{
               "id": "solution.filter.cutoff",
               "label": "Cutoff frequency",
               "type": "integer",
               "size": 1
            }
         ]   
      },
      "Plugin Writer": {
         "label": "Plugin Writer",
         "parameters":[
            {
               "id": "solution.plugin_writer.dt_out",
               "label": "Disk write time interval",
               "type": "double",
               "size": 1
            },{
               "id": "solution.plugin_writer.basedir",
               "label": "Disk write time interval",
               "type": "double",
               "size": 1
            },{
               "id": "solution.plugin_writer.basename",
               "label": "Output name pattern",
               "type": "string",
               "size": 1
            }
         ]   
      },
      "Plugin Fluidforce Name": {
         "label": "Plugin Fluidforce Name",
         "parameters":[
            {
               "id": "solution.plugin_fluidforce.nsteps",
               "label": "Integration interval",
               "type": "integer",
               "size": 1
            },{
               "id": "solution.plugin_fluidforce.file",
               "label": "Output file path",
               "type": "string",
               "size": 1
            },{
               "id": "solution.plugin_fluidforce.header",
               "label": "Output header row",
               "type": "bool"
            }
         ]   
      },
      "Plugin NaN check": {
         "label": "Plugin NaN check",
         "parameters":[
            {
               "id": "solution.plugin_nancheck.nsteps",
               "label": "nsteps",
               "type": "integer",
               "size": 1
            }
         ]   
      },
      "Plugin residual": {
         "label": "Plugin residual",
         "parameters": [
            {
               "id": "solution.plugin_residual.nsteps",
               "label": "Calculation interval",
               "type": "integer",
               "size": 1
            },{
               "id": "solution.plugin_residual.file",
               "label": "Output file path",
               "type": "string",
               "size": 1
            },{
               "id": "solution.plugin_residual.header",
               "label": "Output header row",
               "type": "integer",
               "size": 1
            }
         ] 
      },
      "Plugin sampler": {
         "label": "Plugin sampler",
         "parameters":[
            {  
               "id": "solution.plugin_sampler.nsteps", 
               "label": "nSteps",
               "type": "integer",
               "size": 1
            }, {  
               "id": "solution.plugin_sampler.samp_pts", 
               "label": "Sample points",
               "type": "string",
               "size": 1
            }, {  
               "id": "solution.plugin_sampler.format", 
               "label": "Format",
               "type": "enum",
               "size": 1,
               "enum": {
                  "labels": ["primitive", "conservative"],
                  "values": ["primitive", "conservative"]
               }
            }, {  
               "id": "solution.plugin_sampler.file", 
               "label": "File",
               "type": "string",
               "size": 1
            }, {  
               "id": "solution.plugin_sampler.header", 
               "label": "Header",
               "type": "integer",
               "size": 1
            }
         ]   
      },
      "Plugin Time average": {
         "label": "Plugin Time average",
         "parameters":[
            {
               "id": "solution.plugin_tavg.nsteps", 
               "label": "nSteps average",
               "type": "integer",
               "size": 1
            },{
               "id": "solution.plugin_tavg.dt_out",
               "label": "DT Out",
               "type": "double",
               "size": 1
            },{
               "id": "solution.plugin_tavg.basedir",
               "label": "Basedir",
               "type": "string",
               "size": 1
            },{
               "id": "solution.plugin_tavg.basename",
               "label": "Basename",
               "type": "string",
               "size": 1
            },{
               "id": "solution.plugin_tavg.avg_name",
               "label": "Average Name",
               "type": "string",
               "size": 1
            }
         ]   
      },
      "char-riem-inv": {
         "label": "char-riem-inv",
         "parameters": [
            {
               "id":"name",
               "label": "Name",
               "type": "enum",
               "size": 1,
               "enum": {
                  "external": "boundary-names"
               }
            },{
               "id": "rho",
               "label": "density",
               "type": "string",
               "size": 1
            }, {
               "id": "u",
               "label": "x-velocity",
               "type": "string",
               "size": 1
            }, {
               "id": "v",
               "label": "y-velocity",
               "type": "string",
               "size": 1
            }, {
               "id": "w",
               "label": "z-velocity",
               "type": "string",
               "size": 1
            }, {
               "id": "p",
               "label": "static pressure",
               "type": "string",
               "size": 1
            }
         ]   
      },
      "no-slp-adia-wall": {
         "label": "no-slp-adia-wall",
         "parameters": [
            "no documentation"
         ]   
      },
      "no-slp-isot-wall": {
         "label": "no-slp-isot-wall",
         "parameters": [
            {
               "id":"name",
               "label": "Name",
               "type": "enum",
               "size": 1 ,
               "enum": {
                  "external": "boundary-names"
               }
            },{ 
               "id": "u",
               "label": "x-velocity of wall",
               "type": "double",
               "size": 1
            },{ 
               "id": "v",
               "label": "y-velocity of wall",
               "type": "double",
               "size": 1
            },{ 
               "id": "w",
               "label": "z-velocity of wall",
               "type": "double",
               "size": 1
            },{ 
               "id": "cpTw",
               "label": "Product of specific heat capacity",
               "type": "double",
               "size": 1
            }
         ]   
      },
      "slp-adia-wall": {
         "label": "slp-adia-wall",
         "parameters": [
            "no documentation"
         ]   
      },
      "sub-in-frv": {
         "label": "sub-in-frv",
         "parameters": [
            {
               "id":"name",
               "label": "Name",
               "type": "enum",
               "size": 1,
               "enum": {
                  "external": "boundary-names"
               }
            },{
               "id": "rho",
               "label": "density",
               "type": "double",
               "size": 1
            }, {
               "id": "u",
               "label": "x-velocity",
               "type": "double",
               "size": 1
            }, {
               "id": "v",
               "label": "y-velocity",
               "type": "double",
               "size": 1
            }, {
               "id": "w",
               "label": "z-velocit",
               "type": "double",
               "size": 1
            }
         ]   
      },
      "sub-in-ftpttang": {
         "label": "sub-in-ftpttang",
         "parameters": [
            {
               "id":"name",
               "label": "Name",
               "type": "enum",
               "size": 1 ,
               "enum": {
                  "external": "boundary-names"
               }
            },{
               "id": "pt",
               "label": "Total pressire",
               "type": "double",
               "size": 1
            },{
               "id": "cpTt",
               "label": "Product of specific heat capcacity",
               "type": "double",
               "size": 1
            },{
               "id": "theta",
               "label": "Azimuth angle of inflow",
               "type": "double",
               "size": 1
            },{
               "id": "phi",
               "label": "Inclination of angle of inflow",
               "type": "double",
               "size": 1
            }
         ]   
      },
      "sub-out-fp": {
         "label": "sub-out-fp",
         "parameters": [
            {
               "id":"name",
               "label": "Name",
               "type": "enum",
               "size": 1,
               "enum": {
                  "external": "boundary-names"
               }
            },{
               "id": "p",
               "label": "Static pressure",
               "type": "double",
               "size": 1
            }
         ]   
      },
      "sup-in-fa": {
         "label": "sup-in-fa",
         "parameters": [
            {
               "id":"name",
               "label": "Name",
               "type": "enum",
               "size": 1 ,
               "enum": {
                  "external": "boundary-names"
               }
            },{
               "id": "rho", 
               "label": "density",
               "type": "double",
               "size": 1
            }, {
               "id": "u", 
               "label": "x-velocity",
               "type": "double",
               "size": 1
            }, {
               "id": "v", 
               "label": "y-velocity",
               "type": "double",
               "size": 1
            }, {
               "id": "w", 
               "label": "z-velocity",
               "type": "double",
               "size": 1
            }, {
               "id": "p", 
               "label": "static pressure",
               "type": "double",
               "size": 1
            }
         ]   
      },
      "sup-out-fn": {
         "label": "sup-out-fn",
         "parameters": [
            "no documentation"
         ]   
      },
      "ics": {
         "label": "ics",
         "parameters":[
            {  
               "id": "ics.rho",
               "label": "Initial Density",
               "type": "string",
               "size": 1
            }, {  
               "id": "ics.u",
               "label": "Initial X velocity",
               "type": "string",
               "size": 1
            }, {  
               "id": "ics.v",
               "label": "Initial Y velocity",
               "type": "string",
               "size": 1
            }, {  
               "id": "ics.w",
               "label": "Initial Z velocity",
               "type": "string",
               "size": 1
            }, {  
               "id": "ics.p",
               "label": "Initial static pressure distribution",
               "type": "string",
               "size": 1
            }
         ]
      }
   }
}
