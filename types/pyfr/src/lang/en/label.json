{
    "views": {
        "backend": "Backend",
        "constants": "Constants",
        "solver": "Solver",
        "solver-interfaces": "Solver Interfaces",
        "solver-elements": "Solver Elements",
        "solution-bcs": "Boundary Conditions",
        "solution-ff": "Solution Fluidforce",
        "solution": "Solution"
    },
    "attributes": {
        "Backend-settings": {
            "title": "Settings",
            "parameters": {
                "backend.precision": "Precision",
                "backend.rank_allocator": "Rank Allocator"
            }
        },
        "BackendOr" : {
            "title": "Backend Runner",
            "parameters": {
               "or": "Type"
            }
        },

        "CUDA": {
            "title": "CUDA",
            "parameters": {
                "cuda.device_id": "Precision"
            }
        },
        "Open-MP": {
            "title": "Open-MP",
            "parameters": {
                "open-mp.cc": "C Compiler",
                "open-mp.cflags": "Compiler Flags",
                "open-mp.cblas": "Path to shared C BLAS library",
                "open-mp.cblas_type": "Type of BLAS library"
            }
        },
        "Open-CL": {
            "title": "Open-CL",
            "parameters": {
                "open-cl.platform_id": "Platform ID",
                "open-cl.device_type": "Device Type",
                "open-cl.device_id": "Device ID"
            }
        },
        "Constants": {
            "title": "Constants",
            "parameters": {
                "constants.gamma": "Gamma",
                "constants.mu": "Mu",
                "constants.Pr": "Pr",
                "constants.cpTref": "cpTref",
                "constants.cpTs": "cpTS",
                "constants.custom": "Custom constants"
            }
        },
        "Solver-settings": {
            "title": "Settings",
            "parameters": {
                "solver.system": "System",
                "solver.order": "Order",
                "solver.anti_alias": "Anti-alias",
                "solver.viscosity_correction": "Viscosity correction",
                "solver.shock_capturing": "Shock capturing"
            }
        },
        "TimeIntegrator": {
            "title": "Time Integrator",
            "parameters": {
                "solver.scheme": "Scheme",
                "solver.tstart": "Initial time",
                "solver.tend": "Final time",
                "solver.dt": "Time step",
                "solver.controller": "Controller"
            }
        },
        "rkScheme": {
            "title": "rk34/45 Scheme",
            "parameters": {
                "solver.atol": "atol",
                "solver.rtol": "rtol",
                "solver.safety_fact": "safety-fact",
                "solver.min_fact": "min-fact",
                "solver.max_fact": "max-fact"
            }
        },
        "ArtificialViscosity": {
            "title": "Artificial Viscosity",
            "parameters": {
                "solver.max_amu": "Maximum artificial viscosity",
                "solver.s0": "Sensor cut-off",
                "solver.kappa": "Sensor range"
            }
        },

        "InterfacesOr": {
            "title": "Interfaces",
            "parameters": {
               "or": "Type"
            }
        },
        "Interfaces": {
            "title": "Interfaces",
            "parameters": {
                "solver.riemann_solver": "Riemann Solver",
                "solver.ldg_beta": "LDG Beta",
                "solver.ldg_tau": "LDG Tau"
            }
        },
        "Linear-int": {
            "title": "Linear",
            "parameters": {
                "solver.interfaces.flux_pts": "Flux points",
                "solver.interfaces.quad_deg": "Degree of quadratur",
                "solver.interfaces.quad_pts": "Name of quadratur"
            }
        },
        "Triangular-int": {
            "title": "Triangular",
            "parameters": {
                "solver.interfaces.flux_pts": "Flux points",
                "solver.interfaces.quad_deg": "Degree of quadratur",
                "solver.interfaces.quad_pts": "Name of quadratur"
            }
        },
        "Quadrilateral-int": {
            "title": "Quadrilateral",
            "parameters": {
                "solver.interfaces.flux_pts": "Flux points",
                "solver.interfaces.quad_deg": "Degree of quadratur",
                "solver.interfaces.quad_pts": "Name of quadratur"
            }
        },
        "ElementsOr": {
            "title": "Elements",
            "parameters": {
               "or": "Type"
            }
        },
        "Triangular-el": {
            "title": "Triangular",
            "parameters": {
                "solver.elements.soln_pts": "Solution points",
                "solver.elements.quad_deg": "Degree of quadratur",
                "solver.elements.quad_pts": "Name of quadratur"
            }
        },
        "Quadrilateral-el": {
            "title": "Quadrilateral",
            "parameters": {
                "solver.elements.soln_pts": "Solution points",
                "solver.elements.quad_deg": "Degree of quadratur",
                "solver.elements.quad_pts": "Name of quadratur"
            }
        },
        "Hexahedral-el": {
            "title": "Hexahedral",
            "parameters": {
                "solver.elements.soln_pts": "Solution points",
                "solver.elements.quad_deg": "Degree of quadratur",
                "solver.elements.quad_pts": "Name of quadratur"
            }
        },
        "Tetrahedral-el": {
            "title": "Tetrahedral",
            "parameters": {
                "solver.elements.soln_pts": "Solution points",
                "solver.elements.quad_deg": "Degree of quadratur",
                "solver.elements.quad_pts": "Name of quadratur"
            }
        },
        "Prismatic-el": {
            "title": "Prismatic",
            "parameters": {
                "solver.elements.soln_pts": "Solution points",
                "solver.elements.quad_deg": "Degree of quadratur",
                "solver.elements.quad_pts": "Name of quadratur"
            }
        },
        "Pyramidal-el": {
            "title": "Pyramidal",
            "parameters": {
                "solver.elements.soln_pts": "Solution points",
                "solver.elements.quad_deg": "Degree of quadratur",
                "solver.elements.quad_pts": "Name of quadratur"
            }
        },
        "Solver-source-terms": {
            "title": "Solver Source Terms",
            "parameters": {
                "solver.source-terms.rho": "Density source term",
                "solver.source-terms.rhou": "X-momentum source term",
                "solver.source-terms.rhov": "Y-momentum source term",
                "solver.source-terms.rhow": "Z-momentum source term",
                "solver.source-terms.E": "Energy source term"
            }
        },
        "SolutionOr": {
            "title": "Solution",
            "parameters": {
               "or": "Type"
            }
        },
        "Filter": {
            "title": "Filter",
            "parameters": {
                "solution.filter.nsteps": "Filter apply interval (in steps)",
                "solution.filter.alpha": "Strength of filter",
                "solution.filter.order": "Order of filter",
                "solution.filter.cutoff": "Cutoff frequency"
            }
        },
        "PluginWriter": {
            "title": "Plugin Writer",
            "parameters": {
                "solution.plugin_writer.dt_out": "Disk write time interval",
                "solution.plugin_writer.basedir": "Basedir",
                "solution.plugin_writer.basename": "Output name pattern"
            }
        },
        "PluginFluidforceName": {
            "title": "Plugin Fluidforce Name",
            "parameters": {
                "solution.plugin_fluidforce.name": "Name",
                "solution.plugin_fluidforce.nsteps": "Integration interval",
                "solution.plugin_fluidforce.file": "Output file path",
                "solution.plugin_fluidforce.header": "Output header row"
            }
        },
        "PluginNaNcheck": {
            "title": "Plugin NaN check",
            "parameters": {
                "solution.plugin_nancheck.nsteps": "nsteps"
            }
        },
        "Pluginresidual": {
            "title": "Plugin residual",
            "parameters": {
                "solution.plugin_residual.nsteps": "Calculation interval",
                "solution.plugin_residual.file": "Output file path",
                "solution.plugin_residual.header": "Output header row"
            }
        },
        "Pluginsampler": {
            "title": "Plugin sampler",
            "parameters": {
                "solution.plugin_sampler.nsteps": "nSteps",
                "solution.plugin_sampler.samp_pts": "Sample points",
                "solution.plugin_sampler.format": "Format",
                "solution.plugin_sampler.file": "File",
                "solution.plugin_sampler.header": "Header"
            }
        },
        "PluginTimeaverage": {
            "title": "Plugin Time average",
            "parameters": {
                "solution.plugin_tavg.nsteps": "nSteps average",
                "solution.plugin_tavg.dt_out": "DT Out",
                "solution.plugin_tavg.basedir": "Basedir",
                "solution.plugin_tavg.basename": "Basename",
                "solution.plugin_tavg.avg_name": "Average Name"
            }
        },
        "bcsOr": {
            "title": "BCS",
            "parameters": {
               "or": "Type"
            }
        },
        "char-riem-inv": {
            "title": "char-riem-inv",
            "parameters": {
                "name": "Name",
                "rho": "density",
                "u": "x-velocity",
                "v": "y-velocity",
                "w": "z-velocity",
                "p": "static pressure"
            }
        },
        "no-slp-isot-wall": {
            "title": "no-slp-isot-wall",
            "parameters": {
                "name": "Name",
                "u": "x-velocity of wall",
                "v": "y-velocity of wall",
                "w": "z-velocity of wall",
                "cpTw": "Product of specific heat capacity"
            }
        },
        "no-slp-adia-wall": {
            "title": "no-slp-adia-wall",
            "parameters": { "name": "Name" }
        },
        "slp-adia-wall": {
            "title": "slp-adia-wall",
            "parameters": { "name": "Name" }
        },
        "sup-out-fn": {
            "title": "sup-out-fn",
            "parameters": {}
        },
        "sub-in-frv": {
            "title": "sub-in-frv",
            "parameters": {
                "name": "Name",
                "rho": "density",
                "u": "x-velocity",
                "v": "y-velocity",
                "w": "z-velocit"
            }
        },
        "sub-in-ftpttang": {
            "title": "sub-in-ftpttang",
            "parameters": {
                "name": "Name",
                "pt": "Total pressire",
                "cpTt": "Product of specific heat capcacity",
                "theta": "Azimuth angle of inflow",
                "phi": "Inclination of angle of inflow"
            }
        },
        "sub-out-fp": {
            "title": "sub-out-fp",
            "parameters": {
                "name": "Name",
                "p": "Static pressure"
            }
        },
        "sup-in-fa": {
            "title": "sup-in-fa",
            "parameters": {
                "name": "Name",
                "rho": "density",
                "u": "x-velocity",
                "v": "y-velocity",
                "w": "z-velocity",
                "p": "static pressure"
            }
        },
        "ics": {
            "title": "ics",
            "parameters": {
                "ics.rho": "Initial Density",
                "ics.u": "Initial X velocity",
                "ics.v": "Initial Y velocity",
                "ics.w": "Initial Z velocity",
                "ics.p": "Initial static pressure distribution",
                "ics.custom": "Helper functions"
            }
        }
    }
}
